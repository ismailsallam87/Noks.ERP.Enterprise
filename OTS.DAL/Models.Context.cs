//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OTS.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OTSEntities : DbContext
    {
        public OTSEntities()
            : base("name=OTSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Bulk_Tasks> Bulk_Tasks { get; set; }
        public virtual DbSet<Error_Codes> Error_Codes { get; set; }
        public virtual DbSet<Menu_UI> Menu_UI { get; set; }
        public virtual DbSet<Menu_UI_Roles> Menu_UI_Roles { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<Task_Fees> Task_Fees { get; set; }
        public virtual DbSet<Task_Generic_Status> Task_Generic_Status { get; set; }
        public virtual DbSet<Task_Items> Task_Items { get; set; }
        public virtual DbSet<Task_Status> Task_Status { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
    
        public virtual ObjectResult<Bulk_Task_Tbl_Select_Result> Bulk_Task_Tbl_Select(Nullable<int> iD, string bulk_Name, Nullable<System.DateTime> bulk_Received_Date_From, Nullable<System.DateTime> bulk_Received_Date_To, string bulk_Received_By_Name, string bulk_Received_By_Email, Nullable<System.DateTime> bulk_Uploaded_Date_From, Nullable<System.DateTime> bulk_Uploaded_Date_To, string bulk_Uploaded_By, Nullable<int> bulk_Total_Tasks, Nullable<int> bulk_New_Tasks, Nullable<int> bulk_Project, Nullable<bool> sync, Nullable<System.DateTime> sync_At_From, Nullable<System.DateTime> sync_At_To)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bulk_NameParameter = bulk_Name != null ?
                new ObjectParameter("Bulk_Name", bulk_Name) :
                new ObjectParameter("Bulk_Name", typeof(string));
    
            var bulk_Received_Date_FromParameter = bulk_Received_Date_From.HasValue ?
                new ObjectParameter("Bulk_Received_Date_From", bulk_Received_Date_From) :
                new ObjectParameter("Bulk_Received_Date_From", typeof(System.DateTime));
    
            var bulk_Received_Date_ToParameter = bulk_Received_Date_To.HasValue ?
                new ObjectParameter("Bulk_Received_Date_To", bulk_Received_Date_To) :
                new ObjectParameter("Bulk_Received_Date_To", typeof(System.DateTime));
    
            var bulk_Received_By_NameParameter = bulk_Received_By_Name != null ?
                new ObjectParameter("Bulk_Received_By_Name", bulk_Received_By_Name) :
                new ObjectParameter("Bulk_Received_By_Name", typeof(string));
    
            var bulk_Received_By_EmailParameter = bulk_Received_By_Email != null ?
                new ObjectParameter("Bulk_Received_By_Email", bulk_Received_By_Email) :
                new ObjectParameter("Bulk_Received_By_Email", typeof(string));
    
            var bulk_Uploaded_Date_FromParameter = bulk_Uploaded_Date_From.HasValue ?
                new ObjectParameter("Bulk_Uploaded_Date_From", bulk_Uploaded_Date_From) :
                new ObjectParameter("Bulk_Uploaded_Date_From", typeof(System.DateTime));
    
            var bulk_Uploaded_Date_ToParameter = bulk_Uploaded_Date_To.HasValue ?
                new ObjectParameter("Bulk_Uploaded_Date_To", bulk_Uploaded_Date_To) :
                new ObjectParameter("Bulk_Uploaded_Date_To", typeof(System.DateTime));
    
            var bulk_Uploaded_ByParameter = bulk_Uploaded_By != null ?
                new ObjectParameter("Bulk_Uploaded_By", bulk_Uploaded_By) :
                new ObjectParameter("Bulk_Uploaded_By", typeof(string));
    
            var bulk_Total_TasksParameter = bulk_Total_Tasks.HasValue ?
                new ObjectParameter("Bulk_Total_Tasks", bulk_Total_Tasks) :
                new ObjectParameter("Bulk_Total_Tasks", typeof(int));
    
            var bulk_New_TasksParameter = bulk_New_Tasks.HasValue ?
                new ObjectParameter("Bulk_New_Tasks", bulk_New_Tasks) :
                new ObjectParameter("Bulk_New_Tasks", typeof(int));
    
            var bulk_ProjectParameter = bulk_Project.HasValue ?
                new ObjectParameter("Bulk_Project", bulk_Project) :
                new ObjectParameter("Bulk_Project", typeof(int));
    
            var syncParameter = sync.HasValue ?
                new ObjectParameter("Sync", sync) :
                new ObjectParameter("Sync", typeof(bool));
    
            var sync_At_FromParameter = sync_At_From.HasValue ?
                new ObjectParameter("Sync_At_From", sync_At_From) :
                new ObjectParameter("Sync_At_From", typeof(System.DateTime));
    
            var sync_At_ToParameter = sync_At_To.HasValue ?
                new ObjectParameter("Sync_At_To", sync_At_To) :
                new ObjectParameter("Sync_At_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bulk_Task_Tbl_Select_Result>("Bulk_Task_Tbl_Select", iDParameter, bulk_NameParameter, bulk_Received_Date_FromParameter, bulk_Received_Date_ToParameter, bulk_Received_By_NameParameter, bulk_Received_By_EmailParameter, bulk_Uploaded_Date_FromParameter, bulk_Uploaded_Date_ToParameter, bulk_Uploaded_ByParameter, bulk_Total_TasksParameter, bulk_New_TasksParameter, bulk_ProjectParameter, syncParameter, sync_At_FromParameter, sync_At_ToParameter);
        }
    
        public virtual ObjectResult<Project_List_Result> Project_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Project_List_Result>("Project_List");
        }
    
        public virtual ObjectResult<Projects_Tbl_Select_Result> Projects_Tbl_Select(Nullable<int> project_ID, string project_Name, Nullable<System.DateTime> project_Start_At_From, Nullable<System.DateTime> project_End_At_To, string project_Start_By, Nullable<bool> deleted)
        {
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(int));
    
            var project_NameParameter = project_Name != null ?
                new ObjectParameter("Project_Name", project_Name) :
                new ObjectParameter("Project_Name", typeof(string));
    
            var project_Start_At_FromParameter = project_Start_At_From.HasValue ?
                new ObjectParameter("Project_Start_At_From", project_Start_At_From) :
                new ObjectParameter("Project_Start_At_From", typeof(System.DateTime));
    
            var project_End_At_ToParameter = project_End_At_To.HasValue ?
                new ObjectParameter("Project_End_At_To", project_End_At_To) :
                new ObjectParameter("Project_End_At_To", typeof(System.DateTime));
    
            var project_Start_ByParameter = project_Start_By != null ?
                new ObjectParameter("Project_Start_By", project_Start_By) :
                new ObjectParameter("Project_Start_By", typeof(string));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Projects_Tbl_Select_Result>("Projects_Tbl_Select", project_IDParameter, project_NameParameter, project_Start_At_FromParameter, project_End_At_ToParameter, project_Start_ByParameter, deletedParameter);
        }
    
        public virtual ObjectResult<Runner_List_Result> Runner_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Runner_List_Result>("Runner_List");
        }
    
        public virtual ObjectResult<Runner_Select_Result> Runner_Select(string id, string email, string userName, string phoneNumber)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Runner_Select_Result>("Runner_Select", idParameter, emailParameter, userNameParameter, phoneNumberParameter);
        }
    
        public virtual int SP_Get_User_By_UserID(string userId, Nullable<int> type, string search)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Get_User_By_UserID", userIdParameter, typeParameter, searchParameter);
        }
    
        public virtual ObjectResult<SP_Menu_Configuration_Role_Select_Result> SP_Menu_Configuration_Role_Select(string role_ID, Nullable<int> parent_ID)
        {
            var role_IDParameter = role_ID != null ?
                new ObjectParameter("Role_ID", role_ID) :
                new ObjectParameter("Role_ID", typeof(string));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_Configuration_Role_Select_Result>("SP_Menu_Configuration_Role_Select", role_IDParameter, parent_IDParameter);
        }
    
        public virtual ObjectResult<SP_Menu_Configuration_Select_Result> SP_Menu_Configuration_Select(string userId, Nullable<int> parent_ID)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_Configuration_Select_Result>("SP_Menu_Configuration_Select", userIdParameter, parent_IDParameter);
        }
    
        public virtual ObjectResult<SP_Menu_Parents_Role_Select_Result> SP_Menu_Parents_Role_Select(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_Parents_Role_Select_Result>("SP_Menu_Parents_Role_Select", roleIDParameter);
        }
    
        public virtual ObjectResult<SP_Menu_Parents_Select_Result> SP_Menu_Parents_Select(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_Parents_Select_Result>("SP_Menu_Parents_Select", userIdParameter);
        }
    
        public virtual ObjectResult<SP_Roles_Select_Result> SP_Roles_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Roles_Select_Result>("SP_Roles_Select");
        }
    
        public virtual ObjectResult<string> SP_Roles_UI_Array_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Roles_UI_Array_Select");
        }
    
        public virtual ObjectResult<SP_UI_Actions_List_Result> SP_UI_Actions_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UI_Actions_List_Result>("SP_UI_Actions_List");
        }
    
        public virtual ObjectResult<SP_UserRole_Create_Result> SP_UserRole_Create(string userId, string roleId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UserRole_Create_Result>("SP_UserRole_Create", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<SP_Users_Create_Result> SP_Users_Create(string email, string userName, string role_ID, string passwordHash, string securityStamp, Nullable<bool> locked)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var role_IDParameter = role_ID != null ?
                new ObjectParameter("Role_ID", role_ID) :
                new ObjectParameter("Role_ID", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var securityStampParameter = securityStamp != null ?
                new ObjectParameter("SecurityStamp", securityStamp) :
                new ObjectParameter("SecurityStamp", typeof(string));
    
            var lockedParameter = locked.HasValue ?
                new ObjectParameter("Locked", locked) :
                new ObjectParameter("Locked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_Create_Result>("SP_Users_Create", emailParameter, userNameParameter, role_IDParameter, passwordHashParameter, securityStampParameter, lockedParameter);
        }
    
        public virtual ObjectResult<SP_Users_Lock_Result> SP_Users_Lock(string userId, Nullable<bool> locked)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var lockedParameter = locked.HasValue ?
                new ObjectParameter("Locked", locked) :
                new ObjectParameter("Locked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_Lock_Result>("SP_Users_Lock", userIdParameter, lockedParameter);
        }
    
        public virtual ObjectResult<SP_Users_Rest_Password_Result> SP_Users_Rest_Password(string userId, string passwordHash, string securityStamp)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var securityStampParameter = securityStamp != null ?
                new ObjectParameter("SecurityStamp", securityStamp) :
                new ObjectParameter("SecurityStamp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_Rest_Password_Result>("SP_Users_Rest_Password", userIdParameter, passwordHashParameter, securityStampParameter);
        }
    
        public virtual ObjectResult<SP_Users_Select_Result> SP_Users_Select(string iD, string email, string userName, string role_ID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var role_IDParameter = role_ID != null ?
                new ObjectParameter("Role_ID", role_ID) :
                new ObjectParameter("Role_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_Select_Result>("SP_Users_Select", iDParameter, emailParameter, userNameParameter, role_IDParameter);
        }
    
        public virtual ObjectResult<Task_Items_Tbl_Select_Result> Task_Items_Tbl_Select(Nullable<long> iD, Nullable<long> task_ID, string item_SN, string item_Title, string item_Desc, string item_Weight, Nullable<byte> item_Delivery_Status, string item_Notes, string created_By, Nullable<System.DateTime> created_At_From, Nullable<System.DateTime> created_At_To, Nullable<bool> deleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var task_IDParameter = task_ID.HasValue ?
                new ObjectParameter("Task_ID", task_ID) :
                new ObjectParameter("Task_ID", typeof(long));
    
            var item_SNParameter = item_SN != null ?
                new ObjectParameter("Item_SN", item_SN) :
                new ObjectParameter("Item_SN", typeof(string));
    
            var item_TitleParameter = item_Title != null ?
                new ObjectParameter("Item_Title", item_Title) :
                new ObjectParameter("Item_Title", typeof(string));
    
            var item_DescParameter = item_Desc != null ?
                new ObjectParameter("Item_Desc", item_Desc) :
                new ObjectParameter("Item_Desc", typeof(string));
    
            var item_WeightParameter = item_Weight != null ?
                new ObjectParameter("Item_Weight", item_Weight) :
                new ObjectParameter("Item_Weight", typeof(string));
    
            var item_Delivery_StatusParameter = item_Delivery_Status.HasValue ?
                new ObjectParameter("Item_Delivery_Status", item_Delivery_Status) :
                new ObjectParameter("Item_Delivery_Status", typeof(byte));
    
            var item_NotesParameter = item_Notes != null ?
                new ObjectParameter("Item_Notes", item_Notes) :
                new ObjectParameter("Item_Notes", typeof(string));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            var created_At_FromParameter = created_At_From.HasValue ?
                new ObjectParameter("Created_At_From", created_At_From) :
                new ObjectParameter("Created_At_From", typeof(System.DateTime));
    
            var created_At_ToParameter = created_At_To.HasValue ?
                new ObjectParameter("Created_At_To", created_At_To) :
                new ObjectParameter("Created_At_To", typeof(System.DateTime));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Task_Items_Tbl_Select_Result>("Task_Items_Tbl_Select", iDParameter, task_IDParameter, item_SNParameter, item_TitleParameter, item_DescParameter, item_WeightParameter, item_Delivery_StatusParameter, item_NotesParameter, created_ByParameter, created_At_FromParameter, created_At_ToParameter, deletedParameter);
        }
    
        public virtual ObjectResult<Task_Select_Result> Task_Select(Nullable<long> iD, Nullable<int> project_ID, string task_Title, string task_External_Ref, string task_Internal_Ref, Nullable<bool> task_Is_Closed, string task_Created_By, string task_Account_Name, Nullable<int> task_Area, Nullable<System.DateTime> due_Date_From, Nullable<System.DateTime> due_Date_To, string task_Shipping_Address, string task_Authorized_Person, string task_Authorized_Email, string task_Authorized_Mobile, Nullable<bool> task_Deleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(int));
    
            var task_TitleParameter = task_Title != null ?
                new ObjectParameter("Task_Title", task_Title) :
                new ObjectParameter("Task_Title", typeof(string));
    
            var task_External_RefParameter = task_External_Ref != null ?
                new ObjectParameter("Task_External_Ref", task_External_Ref) :
                new ObjectParameter("Task_External_Ref", typeof(string));
    
            var task_Internal_RefParameter = task_Internal_Ref != null ?
                new ObjectParameter("Task_Internal_Ref", task_Internal_Ref) :
                new ObjectParameter("Task_Internal_Ref", typeof(string));
    
            var task_Is_ClosedParameter = task_Is_Closed.HasValue ?
                new ObjectParameter("Task_Is_Closed", task_Is_Closed) :
                new ObjectParameter("Task_Is_Closed", typeof(bool));
    
            var task_Created_ByParameter = task_Created_By != null ?
                new ObjectParameter("Task_Created_By", task_Created_By) :
                new ObjectParameter("Task_Created_By", typeof(string));
    
            var task_Account_NameParameter = task_Account_Name != null ?
                new ObjectParameter("Task_Account_Name", task_Account_Name) :
                new ObjectParameter("Task_Account_Name", typeof(string));
    
            var task_AreaParameter = task_Area.HasValue ?
                new ObjectParameter("Task_Area", task_Area) :
                new ObjectParameter("Task_Area", typeof(int));
    
            var due_Date_FromParameter = due_Date_From.HasValue ?
                new ObjectParameter("Due_Date_From", due_Date_From) :
                new ObjectParameter("Due_Date_From", typeof(System.DateTime));
    
            var due_Date_ToParameter = due_Date_To.HasValue ?
                new ObjectParameter("Due_Date_To", due_Date_To) :
                new ObjectParameter("Due_Date_To", typeof(System.DateTime));
    
            var task_Shipping_AddressParameter = task_Shipping_Address != null ?
                new ObjectParameter("Task_Shipping_Address", task_Shipping_Address) :
                new ObjectParameter("Task_Shipping_Address", typeof(string));
    
            var task_Authorized_PersonParameter = task_Authorized_Person != null ?
                new ObjectParameter("Task_Authorized_Person", task_Authorized_Person) :
                new ObjectParameter("Task_Authorized_Person", typeof(string));
    
            var task_Authorized_EmailParameter = task_Authorized_Email != null ?
                new ObjectParameter("Task_Authorized_Email", task_Authorized_Email) :
                new ObjectParameter("Task_Authorized_Email", typeof(string));
    
            var task_Authorized_MobileParameter = task_Authorized_Mobile != null ?
                new ObjectParameter("Task_Authorized_Mobile", task_Authorized_Mobile) :
                new ObjectParameter("Task_Authorized_Mobile", typeof(string));
    
            var task_DeletedParameter = task_Deleted.HasValue ?
                new ObjectParameter("Task_Deleted", task_Deleted) :
                new ObjectParameter("Task_Deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Task_Select_Result>("Task_Select", iDParameter, project_IDParameter, task_TitleParameter, task_External_RefParameter, task_Internal_RefParameter, task_Is_ClosedParameter, task_Created_ByParameter, task_Account_NameParameter, task_AreaParameter, due_Date_FromParameter, due_Date_ToParameter, task_Shipping_AddressParameter, task_Authorized_PersonParameter, task_Authorized_EmailParameter, task_Authorized_MobileParameter, task_DeletedParameter);
        }
    
        public virtual ObjectResult<Task_Status_List_Result> Task_Status_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Task_Status_List_Result>("Task_Status_List");
        }
    
        public virtual ObjectResult<Zones_Select_Result> Zones_Select(Nullable<int> iD, string title)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zones_Select_Result>("Zones_Select", iDParameter, titleParameter);
        }
    
        public virtual ObjectResult<string> get_task_title()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_task_title");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Widget_Zones_Covered()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Widget_Zones_Covered");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Widget_Runners_In_Progress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Widget_Runners_In_Progress");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Widget_Tasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Widget_Tasks");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Widget_UnFinished_Tasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Widget_UnFinished_Tasks");
        }
    
        public virtual int SP_Add_Task_Status_ByTaskId(Nullable<int> status_Id, Nullable<int> taskId, Nullable<System.DateTime> actual_start, string orderd_by, string orderd_to)
        {
            var status_IdParameter = status_Id.HasValue ?
                new ObjectParameter("status_Id", status_Id) :
                new ObjectParameter("status_Id", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            var actual_startParameter = actual_start.HasValue ?
                new ObjectParameter("actual_start", actual_start) :
                new ObjectParameter("actual_start", typeof(System.DateTime));
    
            var orderd_byParameter = orderd_by != null ?
                new ObjectParameter("orderd_by", orderd_by) :
                new ObjectParameter("orderd_by", typeof(string));
    
            var orderd_toParameter = orderd_to != null ?
                new ObjectParameter("orderd_to", orderd_to) :
                new ObjectParameter("orderd_to", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_Task_Status_ByTaskId", status_IdParameter, taskIdParameter, actual_startParameter, orderd_byParameter, orderd_toParameter);
        }
    
        public virtual ObjectResult<SP_Select_Remained_Task_Status_ByTaskId_Result> SP_Select_Remained_Task_Status_ByTaskId(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Remained_Task_Status_ByTaskId_Result>("SP_Select_Remained_Task_Status_ByTaskId", taskIdParameter);
        }
    
        public virtual ObjectResult<SP_Select_Task_Status_ByTaskId_Result> SP_Select_Task_Status_ByTaskId(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Task_Status_ByTaskId_Result>("SP_Select_Task_Status_ByTaskId", taskIdParameter);
        }
    
        public virtual ObjectResult<SP_Select_Users_Result> SP_Select_Users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Users_Result>("SP_Select_Users");
        }
    
        public virtual ObjectResult<SP_Select_Task_By_TaskID_Result> SP_Select_Task_By_TaskID(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Task_By_TaskID_Result>("SP_Select_Task_By_TaskID", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_TaskItems_By_TaskID_Result> SP_Select_TaskItems_By_TaskID(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_TaskItems_By_TaskID_Result>("SP_Select_TaskItems_By_TaskID", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_Tasks_By_StatusId_And_TaskIds_Result> SP_Select_Tasks_By_StatusId_And_TaskIds(string statusIds, string taskIds)
        {
            var statusIdsParameter = statusIds != null ?
                new ObjectParameter("statusIds", statusIds) :
                new ObjectParameter("statusIds", typeof(string));
    
            var taskIdsParameter = taskIds != null ?
                new ObjectParameter("taskIds", taskIds) :
                new ObjectParameter("taskIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Tasks_By_StatusId_And_TaskIds_Result>("SP_Select_Tasks_By_StatusId_And_TaskIds", statusIdsParameter, taskIdsParameter);
        }
    
        public virtual ObjectResult<SP_Select_Areas_Result> SP_Select_Areas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Areas_Result>("SP_Select_Areas");
        }
    
        public virtual ObjectResult<SP_Select_Areas_Has_Tasks_Result> SP_Select_Areas_Has_Tasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Areas_Has_Tasks_Result>("SP_Select_Areas_Has_Tasks");
        }
    
        public virtual ObjectResult<SP_select_Areas_Tasks_Result> SP_select_Areas_Tasks(Nullable<int> task_Area)
        {
            var task_AreaParameter = task_Area.HasValue ?
                new ObjectParameter("Task_Area", task_Area) :
                new ObjectParameter("Task_Area", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_select_Areas_Tasks_Result>("SP_select_Areas_Tasks", task_AreaParameter);
        }
    
        public virtual ObjectResult<SP_select_Areas_Tasts_Result> SP_select_Areas_Tasts(Nullable<int> task_Area)
        {
            var task_AreaParameter = task_Area.HasValue ?
                new ObjectParameter("Task_Area", task_Area) :
                new ObjectParameter("Task_Area", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_select_Areas_Tasts_Result>("SP_select_Areas_Tasts", task_AreaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Widget_Tasks_In_Progress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Widget_Tasks_In_Progress");
        }
    
        public virtual ObjectResult<SP_Widget_Display_Tasks_Result> SP_Widget_Display_Tasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Widget_Display_Tasks_Result>("SP_Widget_Display_Tasks");
        }
    
        //public virtual ObjectResult<SP_Kanban_Data_Result> SP_Kanban_Data()
        //{
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Kanban_Data_Result>("SP_Kanban_Data");
        //}
    
        public virtual ObjectResult<string> SP_All_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_All_Status");
        }
    
        public virtual int SP_Delete_Task(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Task", idParameter);
        }
    
        public virtual ObjectResult<sp_Tasks_Opened_Now_Result> sp_Tasks_Opened_Now(string areaIds, string projectIds, string statusIds)
        {
            var areaIdsParameter = areaIds != null ?
                new ObjectParameter("AreaIds", areaIds) :
                new ObjectParameter("AreaIds", typeof(string));
    
            var projectIdsParameter = projectIds != null ?
                new ObjectParameter("ProjectIds", projectIds) :
                new ObjectParameter("ProjectIds", typeof(string));
    
            var statusIdsParameter = statusIds != null ?
                new ObjectParameter("statusIds", statusIds) :
                new ObjectParameter("statusIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Tasks_Opened_Now_Result>("sp_Tasks_Opened_Now", areaIdsParameter, projectIdsParameter, statusIdsParameter);
        }
    }
}
