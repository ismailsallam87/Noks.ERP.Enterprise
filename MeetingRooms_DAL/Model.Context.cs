//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MeetingRooms_DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Noks_MeetingRoomsEntities : DbContext
    {
        public Noks_MeetingRoomsEntities()
            : base("name=Noks_MeetingRoomsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_Delete_Meeting_Room(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Meeting_Room", idParameter);
        }
    
        public virtual int SP_Delete_Person(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Person", idParameter);
        }
    
        public virtual int SP_Delete_Reservation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Reservation", idParameter);
        }
    
        public virtual int SP_Insert_Atendees(Nullable<int> reservation_Id, string attendees_list, Nullable<System.DateTime> checked_in)
        {
            var reservation_IdParameter = reservation_Id.HasValue ?
                new ObjectParameter("reservation_Id", reservation_Id) :
                new ObjectParameter("reservation_Id", typeof(int));
    
            var attendees_listParameter = attendees_list != null ?
                new ObjectParameter("attendees_list", attendees_list) :
                new ObjectParameter("attendees_list", typeof(string));
    
            var checked_inParameter = checked_in.HasValue ?
                new ObjectParameter("checked_in", checked_in) :
                new ObjectParameter("checked_in", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Atendees", reservation_IdParameter, attendees_listParameter, checked_inParameter);
        }
    
        public virtual int SP_Insert_Meeting_Room(string name, string description, string photo, Nullable<int> capacity, Nullable<bool> valid, string created_by, Nullable<int> overhead_projector, Nullable<int> slide_projctor, Nullable<int> film_projctor, Nullable<int> ifp, Nullable<int> video_screen, Nullable<int> white_board, Nullable<int> microphones, Nullable<int> computer, Nullable<int> loud_speakers)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("valid", valid) :
                new ObjectParameter("valid", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var overhead_projectorParameter = overhead_projector.HasValue ?
                new ObjectParameter("overhead_projector", overhead_projector) :
                new ObjectParameter("overhead_projector", typeof(int));
    
            var slide_projctorParameter = slide_projctor.HasValue ?
                new ObjectParameter("slide_projctor", slide_projctor) :
                new ObjectParameter("slide_projctor", typeof(int));
    
            var film_projctorParameter = film_projctor.HasValue ?
                new ObjectParameter("film_projctor", film_projctor) :
                new ObjectParameter("film_projctor", typeof(int));
    
            var ifpParameter = ifp.HasValue ?
                new ObjectParameter("ifp", ifp) :
                new ObjectParameter("ifp", typeof(int));
    
            var video_screenParameter = video_screen.HasValue ?
                new ObjectParameter("video_screen", video_screen) :
                new ObjectParameter("video_screen", typeof(int));
    
            var white_boardParameter = white_board.HasValue ?
                new ObjectParameter("white_board", white_board) :
                new ObjectParameter("white_board", typeof(int));
    
            var microphonesParameter = microphones.HasValue ?
                new ObjectParameter("microphones", microphones) :
                new ObjectParameter("microphones", typeof(int));
    
            var computerParameter = computer.HasValue ?
                new ObjectParameter("computer", computer) :
                new ObjectParameter("computer", typeof(int));
    
            var loud_speakersParameter = loud_speakers.HasValue ?
                new ObjectParameter("loud_speakers", loud_speakers) :
                new ObjectParameter("loud_speakers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Meeting_Room", nameParameter, descriptionParameter, photoParameter, capacityParameter, validParameter, created_byParameter, overhead_projectorParameter, slide_projctorParameter, film_projctorParameter, ifpParameter, video_screenParameter, white_boardParameter, microphonesParameter, computerParameter, loud_speakersParameter);
        }
    
        public virtual int SP_Insert_Person(string email, string fname, string lname, string mname, string title, string job_title, string department, Nullable<bool> valid, Nullable<System.DateTime> created_at, string created_by, Nullable<bool> is_guest)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var mnameParameter = mname != null ?
                new ObjectParameter("mname", mname) :
                new ObjectParameter("mname", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var job_titleParameter = job_title != null ?
                new ObjectParameter("job_title", job_title) :
                new ObjectParameter("job_title", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("valid", valid) :
                new ObjectParameter("valid", typeof(bool));
    
            var created_atParameter = created_at.HasValue ?
                new ObjectParameter("created_at", created_at) :
                new ObjectParameter("created_at", typeof(System.DateTime));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var is_guestParameter = is_guest.HasValue ?
                new ObjectParameter("is_guest", is_guest) :
                new ObjectParameter("is_guest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Person", emailParameter, fnameParameter, lnameParameter, mnameParameter, titleParameter, job_titleParameter, departmentParameter, validParameter, created_atParameter, created_byParameter, is_guestParameter);
        }
    
        public virtual ObjectResult<string> SP_Insert_Reservations_And_Attendees(string created_by, Nullable<System.DateTime> start_from, Nullable<System.DateTime> end_at, Nullable<System.DateTime> check_in, Nullable<System.DateTime> check_out, Nullable<System.DateTime> canceled_at, Nullable<int> meetinroom_Id, string subject, string description, Nullable<bool> confirmed)
        {
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var start_fromParameter = start_from.HasValue ?
                new ObjectParameter("start_from", start_from) :
                new ObjectParameter("start_from", typeof(System.DateTime));
    
            var end_atParameter = end_at.HasValue ?
                new ObjectParameter("end_at", end_at) :
                new ObjectParameter("end_at", typeof(System.DateTime));
    
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("check_in", check_in) :
                new ObjectParameter("check_in", typeof(System.DateTime));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("check_out", check_out) :
                new ObjectParameter("check_out", typeof(System.DateTime));
    
            var canceled_atParameter = canceled_at.HasValue ?
                new ObjectParameter("canceled_at", canceled_at) :
                new ObjectParameter("canceled_at", typeof(System.DateTime));
    
            var meetinroom_IdParameter = meetinroom_Id.HasValue ?
                new ObjectParameter("meetinroom_Id", meetinroom_Id) :
                new ObjectParameter("meetinroom_Id", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var confirmedParameter = confirmed.HasValue ?
                new ObjectParameter("confirmed", confirmed) :
                new ObjectParameter("confirmed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_Reservations_And_Attendees", created_byParameter, start_fromParameter, end_atParameter, check_inParameter, check_outParameter, canceled_atParameter, meetinroom_IdParameter, subjectParameter, descriptionParameter, confirmedParameter);
        }
    
        public virtual ObjectResult<SP_Search_Attendees_Result> SP_Search_Attendees(Nullable<int> reservation_Id)
        {
            var reservation_IdParameter = reservation_Id.HasValue ?
                new ObjectParameter("reservation_Id", reservation_Id) :
                new ObjectParameter("reservation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Search_Attendees_Result>("SP_Search_Attendees", reservation_IdParameter);
        }
    
        public virtual ObjectResult<SP_Search_Meeting_Rooms_Result> SP_Search_Meeting_Rooms(string name, Nullable<int> capacity, Nullable<bool> overhead_projector, Nullable<bool> slide_projector, Nullable<bool> film_projector, Nullable<bool> ifp, Nullable<bool> video_screen, Nullable<bool> white_board, Nullable<bool> microphones, Nullable<bool> computer, Nullable<bool> load_speaker, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<bool> projector)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var overhead_projectorParameter = overhead_projector.HasValue ?
                new ObjectParameter("overhead_projector", overhead_projector) :
                new ObjectParameter("overhead_projector", typeof(bool));
    
            var slide_projectorParameter = slide_projector.HasValue ?
                new ObjectParameter("slide_projector", slide_projector) :
                new ObjectParameter("slide_projector", typeof(bool));
    
            var film_projectorParameter = film_projector.HasValue ?
                new ObjectParameter("film_projector", film_projector) :
                new ObjectParameter("film_projector", typeof(bool));
    
            var ifpParameter = ifp.HasValue ?
                new ObjectParameter("ifp", ifp) :
                new ObjectParameter("ifp", typeof(bool));
    
            var video_screenParameter = video_screen.HasValue ?
                new ObjectParameter("video_screen", video_screen) :
                new ObjectParameter("video_screen", typeof(bool));
    
            var white_boardParameter = white_board.HasValue ?
                new ObjectParameter("white_board", white_board) :
                new ObjectParameter("white_board", typeof(bool));
    
            var microphonesParameter = microphones.HasValue ?
                new ObjectParameter("microphones", microphones) :
                new ObjectParameter("microphones", typeof(bool));
    
            var computerParameter = computer.HasValue ?
                new ObjectParameter("computer", computer) :
                new ObjectParameter("computer", typeof(bool));
    
            var load_speakerParameter = load_speaker.HasValue ?
                new ObjectParameter("load_speaker", load_speaker) :
                new ObjectParameter("load_speaker", typeof(bool));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var projectorParameter = projector.HasValue ?
                new ObjectParameter("Projector", projector) :
                new ObjectParameter("Projector", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Search_Meeting_Rooms_Result>("SP_Search_Meeting_Rooms", nameParameter, capacityParameter, overhead_projectorParameter, slide_projectorParameter, film_projectorParameter, ifpParameter, video_screenParameter, white_boardParameter, microphonesParameter, computerParameter, load_speakerParameter, fromParameter, toParameter, projectorParameter);
        }
    
        public virtual ObjectResult<SP_Search_Reservation_Result> SP_Search_Reservation(Nullable<int> room_meeting_Id, string attendees_Name, Nullable<int> host_Id, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var room_meeting_IdParameter = room_meeting_Id.HasValue ?
                new ObjectParameter("room_meeting_Id", room_meeting_Id) :
                new ObjectParameter("room_meeting_Id", typeof(int));
    
            var attendees_NameParameter = attendees_Name != null ?
                new ObjectParameter("attendees_Name", attendees_Name) :
                new ObjectParameter("attendees_Name", typeof(string));
    
            var host_IdParameter = host_Id.HasValue ?
                new ObjectParameter("host_Id", host_Id) :
                new ObjectParameter("host_Id", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Search_Reservation_Result>("SP_Search_Reservation", room_meeting_IdParameter, attendees_NameParameter, host_IdParameter, fromParameter, toParameter);
        }
    
        public virtual int SP_Update_Meeting_Room(Nullable<int> id, string name, string description, string photo, Nullable<int> capacity, Nullable<bool> valid, Nullable<int> overhewd_projector, Nullable<int> slide_projctor, Nullable<int> film_projctor, Nullable<int> ifp, Nullable<int> vedio_screen, Nullable<int> white_board, Nullable<int> microphones, Nullable<int> computer, Nullable<int> loud_speakers)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("valid", valid) :
                new ObjectParameter("valid", typeof(bool));
    
            var overhewd_projectorParameter = overhewd_projector.HasValue ?
                new ObjectParameter("overhewd_projector", overhewd_projector) :
                new ObjectParameter("overhewd_projector", typeof(int));
    
            var slide_projctorParameter = slide_projctor.HasValue ?
                new ObjectParameter("slide_projctor", slide_projctor) :
                new ObjectParameter("slide_projctor", typeof(int));
    
            var film_projctorParameter = film_projctor.HasValue ?
                new ObjectParameter("film_projctor", film_projctor) :
                new ObjectParameter("film_projctor", typeof(int));
    
            var ifpParameter = ifp.HasValue ?
                new ObjectParameter("ifp", ifp) :
                new ObjectParameter("ifp", typeof(int));
    
            var vedio_screenParameter = vedio_screen.HasValue ?
                new ObjectParameter("vedio_screen", vedio_screen) :
                new ObjectParameter("vedio_screen", typeof(int));
    
            var white_boardParameter = white_board.HasValue ?
                new ObjectParameter("white_board", white_board) :
                new ObjectParameter("white_board", typeof(int));
    
            var microphonesParameter = microphones.HasValue ?
                new ObjectParameter("microphones", microphones) :
                new ObjectParameter("microphones", typeof(int));
    
            var computerParameter = computer.HasValue ?
                new ObjectParameter("computer", computer) :
                new ObjectParameter("computer", typeof(int));
    
            var loud_speakersParameter = loud_speakers.HasValue ?
                new ObjectParameter("loud_speakers", loud_speakers) :
                new ObjectParameter("loud_speakers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Meeting_Room", idParameter, nameParameter, descriptionParameter, photoParameter, capacityParameter, validParameter, overhewd_projectorParameter, slide_projctorParameter, film_projctorParameter, ifpParameter, vedio_screenParameter, white_boardParameter, microphonesParameter, computerParameter, loud_speakersParameter);
        }
    
        public virtual int SP_Update_Person(Nullable<int> id, string email, string fname, string lname, string mname, string title, string job_title, string department, Nullable<bool> valid, Nullable<System.DateTime> created_at, string created_by, Nullable<bool> is_guest)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var mnameParameter = mname != null ?
                new ObjectParameter("mname", mname) :
                new ObjectParameter("mname", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var job_titleParameter = job_title != null ?
                new ObjectParameter("job_title", job_title) :
                new ObjectParameter("job_title", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var validParameter = valid.HasValue ?
                new ObjectParameter("valid", valid) :
                new ObjectParameter("valid", typeof(bool));
    
            var created_atParameter = created_at.HasValue ?
                new ObjectParameter("created_at", created_at) :
                new ObjectParameter("created_at", typeof(System.DateTime));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var is_guestParameter = is_guest.HasValue ?
                new ObjectParameter("is_guest", is_guest) :
                new ObjectParameter("is_guest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Person", idParameter, emailParameter, fnameParameter, lnameParameter, mnameParameter, titleParameter, job_titleParameter, departmentParameter, validParameter, created_atParameter, created_byParameter, is_guestParameter);
        }
    
        public virtual int SP_Update_Reservation(Nullable<int> id, Nullable<int> emploee_Id, Nullable<System.DateTime> start_from, Nullable<System.DateTime> end_at, Nullable<System.DateTime> check_in, Nullable<System.DateTime> check_out, Nullable<System.DateTime> canceled_at, Nullable<int> meetinroom_Id, string subject, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var emploee_IdParameter = emploee_Id.HasValue ?
                new ObjectParameter("emploee_Id", emploee_Id) :
                new ObjectParameter("emploee_Id", typeof(int));
    
            var start_fromParameter = start_from.HasValue ?
                new ObjectParameter("start_from", start_from) :
                new ObjectParameter("start_from", typeof(System.DateTime));
    
            var end_atParameter = end_at.HasValue ?
                new ObjectParameter("end_at", end_at) :
                new ObjectParameter("end_at", typeof(System.DateTime));
    
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("check_in", check_in) :
                new ObjectParameter("check_in", typeof(System.DateTime));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("check_out", check_out) :
                new ObjectParameter("check_out", typeof(System.DateTime));
    
            var canceled_atParameter = canceled_at.HasValue ?
                new ObjectParameter("canceled_at", canceled_at) :
                new ObjectParameter("canceled_at", typeof(System.DateTime));
    
            var meetinroom_IdParameter = meetinroom_Id.HasValue ?
                new ObjectParameter("meetinroom_Id", meetinroom_Id) :
                new ObjectParameter("meetinroom_Id", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Reservation", idParameter, emploee_IdParameter, start_fromParameter, end_atParameter, check_inParameter, check_outParameter, canceled_atParameter, meetinroom_IdParameter, subjectParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<SP_Get_Meeting_Rooms_By_Id_Result> SP_Get_Meeting_Rooms_By_Id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Meeting_Rooms_By_Id_Result>("SP_Get_Meeting_Rooms_By_Id", idParameter);
        }
    
        public virtual ObjectResult<SP_Search_Reservation_Scroll_Result> SP_Search_Reservation_Scroll(Nullable<int> room_meeting_Id, string attendees_Name, Nullable<int> host_Id, Nullable<int> index, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var room_meeting_IdParameter = room_meeting_Id.HasValue ?
                new ObjectParameter("room_meeting_Id", room_meeting_Id) :
                new ObjectParameter("room_meeting_Id", typeof(int));
    
            var attendees_NameParameter = attendees_Name != null ?
                new ObjectParameter("attendees_Name", attendees_Name) :
                new ObjectParameter("attendees_Name", typeof(string));
    
            var host_IdParameter = host_Id.HasValue ?
                new ObjectParameter("host_Id", host_Id) :
                new ObjectParameter("host_Id", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Search_Reservation_Scroll_Result>("SP_Search_Reservation_Scroll", room_meeting_IdParameter, attendees_NameParameter, host_IdParameter, indexParameter, fromParameter, toParameter);
        }
    
        public virtual int SP_Insert_Reservations_Person_And_Attendees(string code, Nullable<System.DateTime> created_at, string created_by, string attendees_emails_list)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var created_atParameter = created_at.HasValue ?
                new ObjectParameter("created_at", created_at) :
                new ObjectParameter("created_at", typeof(System.DateTime));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var attendees_emails_listParameter = attendees_emails_list != null ?
                new ObjectParameter("attendees_emails_list", attendees_emails_list) :
                new ObjectParameter("attendees_emails_list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Reservations_Person_And_Attendees", codeParameter, created_atParameter, created_byParameter, attendees_emails_listParameter);
        }
    
        public virtual int SP_Update_Reservation_Confirmation(string code, string subject, string description)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Reservation_Confirmation", codeParameter, subjectParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<SP_MeetingRoom_DigitalSignage_Result> SP_MeetingRoom_DigitalSignage(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MeetingRoom_DigitalSignage_Result>("SP_MeetingRoom_DigitalSignage", idParameter);
        }
    
        public virtual ObjectResult<SP_Attendees_Count_In_Room_ByDateRange_Result> SP_Attendees_Count_In_Room_ByDateRange(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string department)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Attendees_Count_In_Room_ByDateRange_Result>("SP_Attendees_Count_In_Room_ByDateRange", fromParameter, toParameter, departmentParameter);
        }
    
        public virtual ObjectResult<SP_reservation_chart_range_list_Result> SP_reservation_chart_range_list(string range_type, Nullable<System.DateTime> dt_1, Nullable<System.DateTime> dt_2, Nullable<System.DateTime> selected)
        {
            var range_typeParameter = range_type != null ?
                new ObjectParameter("range_type", range_type) :
                new ObjectParameter("range_type", typeof(string));
    
            var dt_1Parameter = dt_1.HasValue ?
                new ObjectParameter("dt_1", dt_1) :
                new ObjectParameter("dt_1", typeof(System.DateTime));
    
            var dt_2Parameter = dt_2.HasValue ?
                new ObjectParameter("dt_2", dt_2) :
                new ObjectParameter("dt_2", typeof(System.DateTime));
    
            var selectedParameter = selected.HasValue ?
                new ObjectParameter("selected", selected) :
                new ObjectParameter("selected", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_reservation_chart_range_list_Result>("SP_reservation_chart_range_list", range_typeParameter, dt_1Parameter, dt_2Parameter, selectedParameter);
        }
    
        public virtual ObjectResult<SP_Reservations_Hours_Count_In_Room_ByDateRange_Result> SP_Reservations_Hours_Count_In_Room_ByDateRange(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string department)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reservations_Hours_Count_In_Room_ByDateRange_Result>("SP_Reservations_Hours_Count_In_Room_ByDateRange", fromParameter, toParameter, departmentParameter);
        }
    
        public virtual ObjectResult<SP_Room_Reservations_Count_ByDateRange_Result> SP_Room_Reservations_Count_ByDateRange(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string department)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Room_Reservations_Count_ByDateRange_Result>("SP_Room_Reservations_Count_ByDateRange", fromParameter, toParameter, departmentParameter);
        }
    
        public virtual ObjectResult<SP_Get_MeetingRoom_Reservations_On_Current_Day_Result> SP_Get_MeetingRoom_Reservations_On_Current_Day(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_MeetingRoom_Reservations_On_Current_Day_Result>("SP_Get_MeetingRoom_Reservations_On_Current_Day", fromParameter, toParameter);
        }
    
        public virtual int SP_Cancel_Resevation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Cancel_Resevation", idParameter);
        }
    
        public virtual ObjectResult<string> SP_Select_Distinct_Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Select_Distinct_Department");
        }
    
        public virtual ObjectResult<SP_Get_Hosts_Result> SP_Get_Hosts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Hosts_Result>("SP_Get_Hosts");
        }
    
        public virtual ObjectResult<SP_Get_Settings_Result> SP_Get_Settings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Settings_Result>("SP_Get_Settings");
        }
    
        public virtual int SP_Settings_Update(string setting_Key, string setting_Group, string setting_Value)
        {
            var setting_KeyParameter = setting_Key != null ?
                new ObjectParameter("Setting_Key", setting_Key) :
                new ObjectParameter("Setting_Key", typeof(string));
    
            var setting_GroupParameter = setting_Group != null ?
                new ObjectParameter("Setting_Group", setting_Group) :
                new ObjectParameter("Setting_Group", typeof(string));
    
            var setting_ValueParameter = setting_Value != null ?
                new ObjectParameter("Setting_Value", setting_Value) :
                new ObjectParameter("Setting_Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Settings_Update", setting_KeyParameter, setting_GroupParameter, setting_ValueParameter);
        }
    
        public virtual int SP_Update_Email_Settings(string email, string password, string ssl, string user_name, string sMTP_server, string port)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var sslParameter = ssl != null ?
                new ObjectParameter("ssl", ssl) :
                new ObjectParameter("ssl", typeof(string));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var sMTP_serverParameter = sMTP_server != null ?
                new ObjectParameter("SMTP_server", sMTP_server) :
                new ObjectParameter("SMTP_server", typeof(string));
    
            var portParameter = port != null ?
                new ObjectParameter("port", port) :
                new ObjectParameter("port", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Email_Settings", emailParameter, passwordParameter, sslParameter, user_nameParameter, sMTP_serverParameter, portParameter);
        }
    
        public virtual int SP_Update_Localization_Format_Settings(string activity_time)
        {
            var activity_timeParameter = activity_time != null ?
                new ObjectParameter("activity_time", activity_time) :
                new ObjectParameter("activity_time", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Localization_Format_Settings", activity_timeParameter);
        }
    
        public virtual int SP_Update_Reservation_Configuration_Settings(string unconfirmed_cancellation, string check_in, string week_start, string week_end, string day_start, string day_end)
        {
            var unconfirmed_cancellationParameter = unconfirmed_cancellation != null ?
                new ObjectParameter("unconfirmed_cancellation", unconfirmed_cancellation) :
                new ObjectParameter("unconfirmed_cancellation", typeof(string));
    
            var check_inParameter = check_in != null ?
                new ObjectParameter("check_in", check_in) :
                new ObjectParameter("check_in", typeof(string));
    
            var week_startParameter = week_start != null ?
                new ObjectParameter("week_start", week_start) :
                new ObjectParameter("week_start", typeof(string));
    
            var week_endParameter = week_end != null ?
                new ObjectParameter("week_end", week_end) :
                new ObjectParameter("week_end", typeof(string));
    
            var day_startParameter = day_start != null ?
                new ObjectParameter("day_start", day_start) :
                new ObjectParameter("day_start", typeof(string));
    
            var day_endParameter = day_end != null ?
                new ObjectParameter("day_end", day_end) :
                new ObjectParameter("day_end", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Reservation_Configuration_Settings", unconfirmed_cancellationParameter, check_inParameter, week_startParameter, week_endParameter, day_startParameter, day_endParameter);
        }
    
        public virtual ObjectResult<SP_chart_range_list_Result> SP_chart_range_list(string range_type)
        {
            var range_typeParameter = range_type != null ?
                new ObjectParameter("range_type", range_type) :
                new ObjectParameter("range_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_chart_range_list_Result>("SP_chart_range_list", range_typeParameter);
        }
    
        public virtual ObjectResult<SP_Settings_Select_Result> SP_Settings_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Settings_Select_Result>("SP_Settings_Select");
        }
    
        public virtual ObjectResult<string> SP_Settings_Select_ByKey_AndGroup(string group, string key)
        {
            var groupParameter = group != null ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Settings_Select_ByKey_AndGroup", groupParameter, keyParameter);
        }
    
        public virtual ObjectResult<SP_Select_MeetingRoom_Reservation_And_Users_In_CurrentTime_ById_And_Today_Reservations_Result> SP_Select_MeetingRoom_Reservation_And_Users_In_CurrentTime_ById_And_Today_Reservations(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_MeetingRoom_Reservation_And_Users_In_CurrentTime_ById_And_Today_Reservations_Result>("SP_Select_MeetingRoom_Reservation_And_Users_In_CurrentTime_ById_And_Today_Reservations", idParameter);
        }
    
        public virtual ObjectResult<SP_Select_MeetingRoom_DigitalSignange_Result> SP_Select_MeetingRoom_DigitalSignange(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_MeetingRoom_DigitalSignange_Result>("SP_Select_MeetingRoom_DigitalSignange", idParameter);
        }
    
        public virtual ObjectResult<SP_Select_MeetingRooms_Result> SP_Select_MeetingRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_MeetingRooms_Result>("SP_Select_MeetingRooms");
        }
    
        public virtual ObjectResult<SP_DigitalSignage_Calendar_Result> SP_DigitalSignage_Calendar(Nullable<int> meetingRoom_ID)
        {
            var meetingRoom_IDParameter = meetingRoom_ID.HasValue ?
                new ObjectParameter("MeetingRoom_ID", meetingRoom_ID) :
                new ObjectParameter("MeetingRoom_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DigitalSignage_Calendar_Result>("SP_DigitalSignage_Calendar", meetingRoom_IDParameter);
        }
    
        public virtual ObjectResult<SP_DigitalSignage_Current_Attendees_Result> SP_DigitalSignage_Current_Attendees(Nullable<int> meetingRoom_ID)
        {
            var meetingRoom_IDParameter = meetingRoom_ID.HasValue ?
                new ObjectParameter("MeetingRoom_ID", meetingRoom_ID) :
                new ObjectParameter("MeetingRoom_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DigitalSignage_Current_Attendees_Result>("SP_DigitalSignage_Current_Attendees", meetingRoom_IDParameter);
        }
    }
}
