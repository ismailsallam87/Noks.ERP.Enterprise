//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Noks_ATT_MSEntities : DbContext
    {
        public Noks_ATT_MSEntities()
            : base("name=Noks_ATT_MSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_Department_Create_Result> SP_Department_Create(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_Create_Result>("SP_Department_Create", titleParameter);
        }
    
        public virtual ObjectResult<SP_Department_Select_Result> SP_Department_Select(string title, Nullable<int> id)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_Select_Result>("SP_Department_Select", titleParameter, idParameter);
        }
    
        public virtual ObjectResult<SP_Department_Employees_Select_Result> SP_Department_Employees_Select(Nullable<int> department_Id)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_Employees_Select_Result>("SP_Department_Employees_Select", department_IdParameter);
        }
    
        public virtual ObjectResult<SP_Department_JobTitles_Select_Result> SP_Department_JobTitles_Select(Nullable<int> department_Id)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_JobTitles_Select_Result>("SP_Department_JobTitles_Select", department_IdParameter);
        }
    
        public virtual ObjectResult<SP_Department_JobTitle_Create_Result> SP_Department_JobTitle_Create(Nullable<int> department_Id, string code, Nullable<int> job_title_Id, Nullable<bool> is_manager, Nullable<bool> multiple_available)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var job_title_IdParameter = job_title_Id.HasValue ?
                new ObjectParameter("job_title_Id", job_title_Id) :
                new ObjectParameter("job_title_Id", typeof(int));
    
            var is_managerParameter = is_manager.HasValue ?
                new ObjectParameter("is_manager", is_manager) :
                new ObjectParameter("is_manager", typeof(bool));
    
            var multiple_availableParameter = multiple_available.HasValue ?
                new ObjectParameter("multiple_available", multiple_available) :
                new ObjectParameter("multiple_available", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_JobTitle_Create_Result>("SP_Department_JobTitle_Create", department_IdParameter, codeParameter, job_title_IdParameter, is_managerParameter, multiple_availableParameter);
        }
    
        public virtual ObjectResult<SP_JobTitle_List_Select_Result> SP_JobTitle_List_Select(Nullable<int> department_Id)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_JobTitle_List_Select_Result>("SP_JobTitle_List_Select", department_IdParameter);
        }
    
        public virtual ObjectResult<SP_Department_employee_Create_Result> SP_Department_employee_Create(Nullable<int> department_Id, Nullable<int> department_job_ref, Nullable<int> employee_Id, Nullable<System.DateTime> joined_at, string notes, Nullable<int> employee_coach_Id)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            var department_job_refParameter = department_job_ref.HasValue ?
                new ObjectParameter("department_job_ref", department_job_ref) :
                new ObjectParameter("department_job_ref", typeof(int));
    
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("employee_Id", employee_Id) :
                new ObjectParameter("employee_Id", typeof(int));
    
            var joined_atParameter = joined_at.HasValue ?
                new ObjectParameter("joined_at", joined_at) :
                new ObjectParameter("joined_at", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var employee_coach_IdParameter = employee_coach_Id.HasValue ?
                new ObjectParameter("employee_coach_Id", employee_coach_Id) :
                new ObjectParameter("employee_coach_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Department_employee_Create_Result>("SP_Department_employee_Create", department_IdParameter, department_job_refParameter, employee_IdParameter, joined_atParameter, notesParameter, employee_coach_IdParameter);
        }
    
        public virtual ObjectResult<SP_Employee_List_Select_Result> SP_Employee_List_Select(Nullable<bool> only_free, Nullable<int> department_Id, Nullable<int> shift_Id)
        {
            var only_freeParameter = only_free.HasValue ?
                new ObjectParameter("Only_free", only_free) :
                new ObjectParameter("Only_free", typeof(bool));
    
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            var shift_IdParameter = shift_Id.HasValue ?
                new ObjectParameter("shift_Id", shift_Id) :
                new ObjectParameter("shift_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_List_Select_Result>("SP_Employee_List_Select", only_freeParameter, department_IdParameter, shift_IdParameter);
        }
    
        public virtual ObjectResult<SP_Shifts_Select_Result> SP_Shifts_Select(Nullable<int> shift_id)
        {
            var shift_idParameter = shift_id.HasValue ?
                new ObjectParameter("shift_id", shift_id) :
                new ObjectParameter("shift_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shifts_Select_Result>("SP_Shifts_Select", shift_idParameter);
        }
    
        public virtual ObjectResult<SP_Shift_Create_Result> SP_Shift_Create(string title, Nullable<System.TimeSpan> check_in, Nullable<System.TimeSpan> check_out, Nullable<int> work_hours)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("check_in", check_in) :
                new ObjectParameter("check_in", typeof(System.TimeSpan));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("check_out", check_out) :
                new ObjectParameter("check_out", typeof(System.TimeSpan));
    
            var work_hoursParameter = work_hours.HasValue ?
                new ObjectParameter("work_hours", work_hours) :
                new ObjectParameter("work_hours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Create_Result>("SP_Shift_Create", titleParameter, check_inParameter, check_outParameter, work_hoursParameter);
        }
    
        public virtual ObjectResult<SP_Employees_For_Shift_Result> SP_Employees_For_Shift()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employees_For_Shift_Result>("SP_Employees_For_Shift");
        }
    
        public virtual ObjectResult<SP_Shift_Employee_Join_Result> SP_Shift_Employee_Join(Nullable<int> employee_Id, Nullable<int> shift_Id, Nullable<System.DateTime> join_Date)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("employee_Id", employee_Id) :
                new ObjectParameter("employee_Id", typeof(int));
    
            var shift_IdParameter = shift_Id.HasValue ?
                new ObjectParameter("shift_Id", shift_Id) :
                new ObjectParameter("shift_Id", typeof(int));
    
            var join_DateParameter = join_Date.HasValue ?
                new ObjectParameter("Join_Date", join_Date) :
                new ObjectParameter("Join_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Employee_Join_Result>("SP_Shift_Employee_Join", employee_IdParameter, shift_IdParameter, join_DateParameter);
        }
    
        public virtual ObjectResult<SP_Shift_Rules_Result> SP_Shift_Rules(Nullable<int> shift_id)
        {
            var shift_idParameter = shift_id.HasValue ?
                new ObjectParameter("shift_id", shift_id) :
                new ObjectParameter("shift_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Rules_Result>("SP_Shift_Rules", shift_idParameter);
        }
    
        public virtual ObjectResult<SP_Shift_Stat_Details_Result> SP_Shift_Stat_Details(Nullable<int> shift_Id)
        {
            var shift_IdParameter = shift_Id.HasValue ?
                new ObjectParameter("shift_Id", shift_Id) :
                new ObjectParameter("shift_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Stat_Details_Result>("SP_Shift_Stat_Details", shift_IdParameter);
        }
    
        public virtual ObjectResult<SP_Shift_Rule_Type_List_Result> SP_Shift_Rule_Type_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Rule_Type_List_Result>("SP_Shift_Rule_Type_List");
        }
    
        public virtual ObjectResult<SP_Shift_Rule_Submit_Result> SP_Shift_Rule_Submit(string title, Nullable<System.TimeSpan> range_from, Nullable<System.TimeSpan> range_to, Nullable<int> rate, string color, Nullable<int> type_Id, Nullable<int> shift_Id)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var range_fromParameter = range_from.HasValue ?
                new ObjectParameter("range_from", range_from) :
                new ObjectParameter("range_from", typeof(System.TimeSpan));
    
            var range_toParameter = range_to.HasValue ?
                new ObjectParameter("range_to", range_to) :
                new ObjectParameter("range_to", typeof(System.TimeSpan));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(int));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var type_IdParameter = type_Id.HasValue ?
                new ObjectParameter("type_Id", type_Id) :
                new ObjectParameter("type_Id", typeof(int));
    
            var shift_IdParameter = shift_Id.HasValue ?
                new ObjectParameter("shift_Id", shift_Id) :
                new ObjectParameter("shift_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shift_Rule_Submit_Result>("SP_Shift_Rule_Submit", titleParameter, range_fromParameter, range_toParameter, rateParameter, colorParameter, type_IdParameter, shift_IdParameter);
        }
    
        public virtual ObjectResult<SP_Employee_Select_Result> SP_Employee_Select(Nullable<int> id, string name, string photo, string code, string ssn, string mobile, string social_insurance_code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var social_insurance_codeParameter = social_insurance_code != null ?
                new ObjectParameter("social_insurance_code", social_insurance_code) :
                new ObjectParameter("social_insurance_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Select_Result>("SP_Employee_Select", idParameter, nameParameter, photoParameter, codeParameter, ssnParameter, mobileParameter, social_insurance_codeParameter);
        }
    
        public virtual ObjectResult<SP_Employee_Create_Result> SP_Employee_Create(string name, string photo, string code, string user_Id, string ssn, string mobile, string social_insurance_code)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("user_Id", user_Id) :
                new ObjectParameter("user_Id", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var social_insurance_codeParameter = social_insurance_code != null ?
                new ObjectParameter("social_insurance_code", social_insurance_code) :
                new ObjectParameter("social_insurance_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Create_Result>("SP_Employee_Create", nameParameter, photoParameter, codeParameter, user_IdParameter, ssnParameter, mobileParameter, social_insurance_codeParameter);
        }
    
        public virtual ObjectResult<SP_User_List_Result> SP_User_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_User_List_Result>("SP_User_List");
        }
    
        public virtual ObjectResult<SP_Employee_Attendance_Sheet_Result> SP_Employee_Attendance_Sheet(Nullable<System.DateTime> day_from, Nullable<System.DateTime> day_to, Nullable<int> employee_Id, Nullable<int> monthly_master_ref_Id, Nullable<bool> monthly_master_ref_current)
        {
            var day_fromParameter = day_from.HasValue ?
                new ObjectParameter("day_from", day_from) :
                new ObjectParameter("day_from", typeof(System.DateTime));
    
            var day_toParameter = day_to.HasValue ?
                new ObjectParameter("day_to", day_to) :
                new ObjectParameter("day_to", typeof(System.DateTime));
    
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("employee_Id", employee_Id) :
                new ObjectParameter("employee_Id", typeof(int));
    
            var monthly_master_ref_IdParameter = monthly_master_ref_Id.HasValue ?
                new ObjectParameter("monthly_master_ref_Id", monthly_master_ref_Id) :
                new ObjectParameter("monthly_master_ref_Id", typeof(int));
    
            var monthly_master_ref_currentParameter = monthly_master_ref_current.HasValue ?
                new ObjectParameter("monthly_master_ref_current", monthly_master_ref_current) :
                new ObjectParameter("monthly_master_ref_current", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Attendance_Sheet_Result>("SP_Employee_Attendance_Sheet", day_fromParameter, day_toParameter, employee_IdParameter, monthly_master_ref_IdParameter, monthly_master_ref_currentParameter);
        }
    
        public virtual ObjectResult<SP_Employee_Contracts_Result> SP_Employee_Contracts(Nullable<int> employee_Id)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Contracts_Result>("SP_Employee_Contracts", employee_IdParameter);
        }
    
        public virtual ObjectResult<SP_Employee_Leave_Requests_Result> SP_Employee_Leave_Requests(Nullable<bool> all, Nullable<int> employee_Id)
        {
            var allParameter = all.HasValue ?
                new ObjectParameter("All", all) :
                new ObjectParameter("All", typeof(bool));
    
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Leave_Requests_Result>("SP_Employee_Leave_Requests", allParameter, employee_IdParameter);
        }
    
        public virtual ObjectResult<SP_monthly_master_ref_List_Result> SP_monthly_master_ref_List(Nullable<bool> is_Current)
        {
            var is_CurrentParameter = is_Current.HasValue ?
                new ObjectParameter("Is_Current", is_Current) :
                new ObjectParameter("Is_Current", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_monthly_master_ref_List_Result>("SP_monthly_master_ref_List", is_CurrentParameter);
        }
    
        public virtual ObjectResult<SP_Edit_Employee_Result> SP_Edit_Employee(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Edit_Employee_Result>("SP_Edit_Employee", emp_idParameter);
        }
    
        public virtual ObjectResult<SP_Employee_Edit_Result> SP_Employee_Edit(Nullable<int> id, string name, string photo, string code, string ssn, string mobile, string social_insurance_code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var social_insurance_codeParameter = social_insurance_code != null ?
                new ObjectParameter("social_insurance_code", social_insurance_code) :
                new ObjectParameter("social_insurance_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Edit_Result>("SP_Employee_Edit", idParameter, nameParameter, photoParameter, codeParameter, ssnParameter, mobileParameter, social_insurance_codeParameter);
        }
    
        public virtual ObjectResult<SP_Devices_Select_Result> SP_Devices_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Devices_Select_Result>("SP_Devices_Select");
        }
    
        public virtual ObjectResult<SP_Device_Create_Result> SP_Device_Create(string device_Name, Nullable<int> device_No, Nullable<int> device_ID, string device_IP, string device_Port, string device_Password)
        {
            var device_NameParameter = device_Name != null ?
                new ObjectParameter("Device_Name", device_Name) :
                new ObjectParameter("Device_Name", typeof(string));
    
            var device_NoParameter = device_No.HasValue ?
                new ObjectParameter("Device_No", device_No) :
                new ObjectParameter("Device_No", typeof(int));
    
            var device_IDParameter = device_ID.HasValue ?
                new ObjectParameter("Device_ID", device_ID) :
                new ObjectParameter("Device_ID", typeof(int));
    
            var device_IPParameter = device_IP != null ?
                new ObjectParameter("Device_IP", device_IP) :
                new ObjectParameter("Device_IP", typeof(string));
    
            var device_PortParameter = device_Port != null ?
                new ObjectParameter("Device_Port", device_Port) :
                new ObjectParameter("Device_Port", typeof(string));
    
            var device_PasswordParameter = device_Password != null ?
                new ObjectParameter("Device_Password", device_Password) :
                new ObjectParameter("Device_Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Device_Create_Result>("SP_Device_Create", device_NameParameter, device_NoParameter, device_IDParameter, device_IPParameter, device_PortParameter, device_PasswordParameter);
        }
    
        public virtual int SP_Department_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Department_Delete", idParameter);
        }
    
        public virtual ObjectResult<string> SP_User_Avatar(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_User_Avatar", userIdParameter);
        }
    
        public virtual ObjectResult<SP_Job_Title_Create_Result> SP_Job_Title_Create(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Job_Title_Create_Result>("SP_Job_Title_Create", titleParameter);
        }
    
        public virtual ObjectResult<Sp_Select_Job_Title_Result> Sp_Select_Job_Title()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Select_Job_Title_Result>("Sp_Select_Job_Title");
        }
    
        public virtual ObjectResult<SP_Get_Job_Title_By_Id_Result> SP_Get_Job_Title_By_Id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Job_Title_By_Id_Result>("SP_Get_Job_Title_By_Id", idParameter);
        }
    
        public virtual int SP_Update_Job_Title(Nullable<int> id, string title)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Job_Title", idParameter, titleParameter);
        }
    
        public virtual int SP_Update_Department(Nullable<int> id, string title)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Department", idParameter, titleParameter);
        }
    
        public virtual int SP_Update_Shift(Nullable<int> id, string title, Nullable<System.TimeSpan> check_in, Nullable<System.TimeSpan> check_out)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("check_in", check_in) :
                new ObjectParameter("check_in", typeof(System.TimeSpan));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("check_out", check_out) :
                new ObjectParameter("check_out", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Shift", idParameter, titleParameter, check_inParameter, check_outParameter);
        }
    
        public virtual int SP_Shift_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Shift_Delete", idParameter);
        }
    
        public virtual int Sp_Change_Status(Nullable<bool> status, Nullable<int> id)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Change_Status", statusParameter, idParameter);
        }
    
        public virtual int SP_Employee_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Delete", idParameter);
        }
    
        public virtual ObjectResult<SP_Select_Departments_Result> SP_Select_Departments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Departments_Result>("SP_Select_Departments");
        }
    
        public virtual ObjectResult<SP_Select_Job_Title_By_Dept_id_Result> SP_Select_Job_Title_By_Dept_id(Nullable<int> department_Id)
        {
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("department_Id", department_Id) :
                new ObjectParameter("department_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Job_Title_By_Dept_id_Result>("SP_Select_Job_Title_By_Dept_id", department_IdParameter);
        }
    
        public virtual int SP_Insert_Document_Details(Nullable<int> employee_id, Nullable<int> document_ref_id, Nullable<System.DateTime> signed_at, Nullable<System.DateTime> expires_at, string notes, Nullable<bool> expired, string copy_Path, Nullable<bool> purged, Nullable<bool> renwed)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("Employee_id", employee_id) :
                new ObjectParameter("Employee_id", typeof(int));
    
            var document_ref_idParameter = document_ref_id.HasValue ?
                new ObjectParameter("document_ref_id", document_ref_id) :
                new ObjectParameter("document_ref_id", typeof(int));
    
            var signed_atParameter = signed_at.HasValue ?
                new ObjectParameter("signed_at", signed_at) :
                new ObjectParameter("signed_at", typeof(System.DateTime));
    
            var expires_atParameter = expires_at.HasValue ?
                new ObjectParameter("expires_at", expires_at) :
                new ObjectParameter("expires_at", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var expiredParameter = expired.HasValue ?
                new ObjectParameter("expired", expired) :
                new ObjectParameter("expired", typeof(bool));
    
            var copy_PathParameter = copy_Path != null ?
                new ObjectParameter("copy_Path", copy_Path) :
                new ObjectParameter("copy_Path", typeof(string));
    
            var purgedParameter = purged.HasValue ?
                new ObjectParameter("purged", purged) :
                new ObjectParameter("purged", typeof(bool));
    
            var renwedParameter = renwed.HasValue ?
                new ObjectParameter("renwed", renwed) :
                new ObjectParameter("renwed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Document_Details", employee_idParameter, document_ref_idParameter, signed_atParameter, expires_atParameter, notesParameter, expiredParameter, copy_PathParameter, purgedParameter, renwedParameter);
        }
    
        public virtual int SP_Insert_Contract_Details(Nullable<int> employee_id, Nullable<int> job_Title_id, string employee_Name, string employee_Mid_Name, string employee_last_Name, string aspuser, Nullable<System.DateTime> datapicker2, Nullable<System.DateTime> datapicker3_Exp_Start, Nullable<System.DateTime> datapicker4, Nullable<System.DateTime> datapicker5, Nullable<System.DateTime> datapicker6_Exp_End, Nullable<decimal> contract_net_salary, Nullable<decimal> contract_basic_salary, Nullable<decimal> contract_gross_salary, Nullable<bool> chk_terminated, Nullable<bool> chk_renewable)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("Employee_id", employee_id) :
                new ObjectParameter("Employee_id", typeof(int));
    
            var job_Title_idParameter = job_Title_id.HasValue ?
                new ObjectParameter("Job_Title_id", job_Title_id) :
                new ObjectParameter("Job_Title_id", typeof(int));
    
            var employee_NameParameter = employee_Name != null ?
                new ObjectParameter("Employee_Name", employee_Name) :
                new ObjectParameter("Employee_Name", typeof(string));
    
            var employee_Mid_NameParameter = employee_Mid_Name != null ?
                new ObjectParameter("Employee_Mid_Name", employee_Mid_Name) :
                new ObjectParameter("Employee_Mid_Name", typeof(string));
    
            var employee_last_NameParameter = employee_last_Name != null ?
                new ObjectParameter("Employee_last_Name", employee_last_Name) :
                new ObjectParameter("Employee_last_Name", typeof(string));
    
            var aspuserParameter = aspuser != null ?
                new ObjectParameter("aspuser", aspuser) :
                new ObjectParameter("aspuser", typeof(string));
    
            var datapicker2Parameter = datapicker2.HasValue ?
                new ObjectParameter("datapicker2", datapicker2) :
                new ObjectParameter("datapicker2", typeof(System.DateTime));
    
            var datapicker3_Exp_StartParameter = datapicker3_Exp_Start.HasValue ?
                new ObjectParameter("datapicker3_Exp_Start", datapicker3_Exp_Start) :
                new ObjectParameter("datapicker3_Exp_Start", typeof(System.DateTime));
    
            var datapicker4Parameter = datapicker4.HasValue ?
                new ObjectParameter("datapicker4", datapicker4) :
                new ObjectParameter("datapicker4", typeof(System.DateTime));
    
            var datapicker5Parameter = datapicker5.HasValue ?
                new ObjectParameter("datapicker5", datapicker5) :
                new ObjectParameter("datapicker5", typeof(System.DateTime));
    
            var datapicker6_Exp_EndParameter = datapicker6_Exp_End.HasValue ?
                new ObjectParameter("datapicker6_Exp_End", datapicker6_Exp_End) :
                new ObjectParameter("datapicker6_Exp_End", typeof(System.DateTime));
    
            var contract_net_salaryParameter = contract_net_salary.HasValue ?
                new ObjectParameter("contract_net_salary", contract_net_salary) :
                new ObjectParameter("contract_net_salary", typeof(decimal));
    
            var contract_basic_salaryParameter = contract_basic_salary.HasValue ?
                new ObjectParameter("contract_basic_salary", contract_basic_salary) :
                new ObjectParameter("contract_basic_salary", typeof(decimal));
    
            var contract_gross_salaryParameter = contract_gross_salary.HasValue ?
                new ObjectParameter("contract_gross_salary", contract_gross_salary) :
                new ObjectParameter("contract_gross_salary", typeof(decimal));
    
            var chk_terminatedParameter = chk_terminated.HasValue ?
                new ObjectParameter("chk_terminated", chk_terminated) :
                new ObjectParameter("chk_terminated", typeof(bool));
    
            var chk_renewableParameter = chk_renewable.HasValue ?
                new ObjectParameter("chk_renewable", chk_renewable) :
                new ObjectParameter("chk_renewable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Contract_Details", employee_idParameter, job_Title_idParameter, employee_NameParameter, employee_Mid_NameParameter, employee_last_NameParameter, aspuserParameter, datapicker2Parameter, datapicker3_Exp_StartParameter, datapicker4Parameter, datapicker5Parameter, datapicker6_Exp_EndParameter, contract_net_salaryParameter, contract_basic_salaryParameter, contract_gross_salaryParameter, chk_terminatedParameter, chk_renewableParameter);
        }
    
        public virtual ObjectResult<SP_Select_Document_Reference_Result> SP_Select_Document_Reference()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Document_Reference_Result>("SP_Select_Document_Reference");
        }
    
        public virtual ObjectResult<SP_Select_Leave_request_ref_Result> SP_Select_Leave_request_ref()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Leave_request_ref_Result>("SP_Select_Leave_request_ref");
        }
    
        public virtual ObjectResult<SP_select_Employee_Result> SP_select_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_select_Employee_Result>("SP_select_Employee");
        }
    
        public virtual ObjectResult<SP_Employee_Documents_Result> SP_Employee_Documents(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employee_Documents_Result>("SP_Employee_Documents", employee_IDParameter);
        }
    
        public virtual ObjectResult<SP_Edit_Employee_Document_Result> SP_Edit_Employee_Document(Nullable<int> employee_documents_Id)
        {
            var employee_documents_IdParameter = employee_documents_Id.HasValue ?
                new ObjectParameter("employee_documents_Id", employee_documents_Id) :
                new ObjectParameter("employee_documents_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Edit_Employee_Document_Result>("SP_Edit_Employee_Document", employee_documents_IdParameter);
        }
    
        public virtual int SP_Update_Document_Details(Nullable<int> employee_document_Id, Nullable<int> document_ref_id, Nullable<System.DateTime> signed_at, Nullable<System.DateTime> expires_at, string notes, string copy_Path)
        {
            var employee_document_IdParameter = employee_document_Id.HasValue ?
                new ObjectParameter("employee_document_Id", employee_document_Id) :
                new ObjectParameter("employee_document_Id", typeof(int));
    
            var document_ref_idParameter = document_ref_id.HasValue ?
                new ObjectParameter("document_ref_id", document_ref_id) :
                new ObjectParameter("document_ref_id", typeof(int));
    
            var signed_atParameter = signed_at.HasValue ?
                new ObjectParameter("signed_at", signed_at) :
                new ObjectParameter("signed_at", typeof(System.DateTime));
    
            var expires_atParameter = expires_at.HasValue ?
                new ObjectParameter("expires_at", expires_at) :
                new ObjectParameter("expires_at", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var copy_PathParameter = copy_Path != null ?
                new ObjectParameter("copy_Path", copy_Path) :
                new ObjectParameter("copy_Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Document_Details", employee_document_IdParameter, document_ref_idParameter, signed_atParameter, expires_atParameter, notesParameter, copy_PathParameter);
        }
    
        public virtual int SP_Update_Document_Detail(Nullable<int> employee_document_Id, Nullable<int> document_ref_id, Nullable<System.DateTime> signed_at, Nullable<System.DateTime> expires_at, string notes, string copy_Path)
        {
            var employee_document_IdParameter = employee_document_Id.HasValue ?
                new ObjectParameter("employee_document_Id", employee_document_Id) :
                new ObjectParameter("employee_document_Id", typeof(int));
    
            var document_ref_idParameter = document_ref_id.HasValue ?
                new ObjectParameter("document_ref_id", document_ref_id) :
                new ObjectParameter("document_ref_id", typeof(int));
    
            var signed_atParameter = signed_at.HasValue ?
                new ObjectParameter("signed_at", signed_at) :
                new ObjectParameter("signed_at", typeof(System.DateTime));
    
            var expires_atParameter = expires_at.HasValue ?
                new ObjectParameter("expires_at", expires_at) :
                new ObjectParameter("expires_at", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var copy_PathParameter = copy_Path != null ?
                new ObjectParameter("copy_Path", copy_Path) :
                new ObjectParameter("copy_Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Document_Detail", employee_document_IdParameter, document_ref_idParameter, signed_atParameter, expires_atParameter, notesParameter, copy_PathParameter);
        }
    
        public virtual int SP_agent_Employee_Attendance_Update_Absence()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_agent_Employee_Attendance_Update_Absence");
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Employee_Attendance_Sheet_Open_Month(Nullable<System.DateTime> date_from, Nullable<System.DateTime> date_to, Nullable<int> employee_Id)
        {
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            var date_toParameter = date_to.HasValue ?
                new ObjectParameter("date_to", date_to) :
                new ObjectParameter("date_to", typeof(System.DateTime));
    
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("employee_Id", employee_Id) :
                new ObjectParameter("employee_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Attendance_Sheet_Open_Month", date_fromParameter, date_toParameter, employee_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_Insert_New_Log(Nullable<int> device_ID, Nullable<int> enroll_No, string log_Mode, Nullable<System.DateTime> log_Date)
        {
            var device_IDParameter = device_ID.HasValue ?
                new ObjectParameter("Device_ID", device_ID) :
                new ObjectParameter("Device_ID", typeof(int));
    
            var enroll_NoParameter = enroll_No.HasValue ?
                new ObjectParameter("Enroll_No", enroll_No) :
                new ObjectParameter("Enroll_No", typeof(int));
    
            var log_ModeParameter = log_Mode != null ?
                new ObjectParameter("Log_Mode", log_Mode) :
                new ObjectParameter("Log_Mode", typeof(string));
    
            var log_DateParameter = log_Date.HasValue ?
                new ObjectParameter("Log_Date", log_Date) :
                new ObjectParameter("Log_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_Insert_New_Log", device_IDParameter, enroll_NoParameter, log_ModeParameter, log_DateParameter);
        }
    
        public virtual ObjectResult<SP_Select_Requests_Result> SP_Select_Requests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Requests_Result>("SP_Select_Requests");
        }
    
        public virtual int SP_Update_Request_Approvement(Nullable<int> id, Nullable<bool> approved, Nullable<bool> rejected)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("approved", approved) :
                new ObjectParameter("approved", typeof(bool));
    
            var rejectedParameter = rejected.HasValue ?
                new ObjectParameter("rejected", rejected) :
                new ObjectParameter("rejected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Request_Approvement", idParameter, approvedParameter, rejectedParameter);
        }
    
        public virtual int enroll_employee_device(string employee_code, Nullable<int> employee_no, Nullable<int> device_id)
        {
            var employee_codeParameter = employee_code != null ?
                new ObjectParameter("employee_code", employee_code) :
                new ObjectParameter("employee_code", typeof(string));
    
            var employee_noParameter = employee_no.HasValue ?
                new ObjectParameter("employee_no", employee_no) :
                new ObjectParameter("employee_no", typeof(int));
    
            var device_idParameter = device_id.HasValue ?
                new ObjectParameter("device_id", device_id) :
                new ObjectParameter("device_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("enroll_employee_device", employee_codeParameter, employee_noParameter, device_idParameter);
        }
    
        public virtual int SP_Insert_Leave_Details(Nullable<int> leave_request_ref_Id, Nullable<int> requested_for_employee_Id, Nullable<System.DateTime> req_from, Nullable<System.DateTime> req_to, string posted_by)
        {
            var leave_request_ref_IdParameter = leave_request_ref_Id.HasValue ?
                new ObjectParameter("leave_request_ref_Id", leave_request_ref_Id) :
                new ObjectParameter("leave_request_ref_Id", typeof(int));
    
            var requested_for_employee_IdParameter = requested_for_employee_Id.HasValue ?
                new ObjectParameter("requested_for_employee_Id", requested_for_employee_Id) :
                new ObjectParameter("requested_for_employee_Id", typeof(int));
    
            var req_fromParameter = req_from.HasValue ?
                new ObjectParameter("req_from", req_from) :
                new ObjectParameter("req_from", typeof(System.DateTime));
    
            var req_toParameter = req_to.HasValue ?
                new ObjectParameter("req_to", req_to) :
                new ObjectParameter("req_to", typeof(System.DateTime));
    
            var posted_byParameter = posted_by != null ?
                new ObjectParameter("posted_by", posted_by) :
                new ObjectParameter("posted_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Leave_Details", leave_request_ref_IdParameter, requested_for_employee_IdParameter, req_fromParameter, req_toParameter, posted_byParameter);
        }
    
        public virtual int SP_Update_Work_days(string id_list, string ids)
        {
            var id_listParameter = id_list != null ?
                new ObjectParameter("id_list", id_list) :
                new ObjectParameter("id_list", typeof(string));
    
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Work_days", id_listParameter, idsParameter);
        }
    
        public virtual ObjectResult<SP_WorkDays_Select_Result> SP_WorkDays_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WorkDays_Select_Result>("SP_WorkDays_Select");
        }
    
        public virtual int SP_Insert_Shift_Days(string day, Nullable<bool> day_on, Nullable<int> shiftId)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var day_onParameter = day_on.HasValue ?
                new ObjectParameter("day_on", day_on) :
                new ObjectParameter("day_on", typeof(bool));
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("shiftId", shiftId) :
                new ObjectParameter("shiftId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Shift_Days", dayParameter, day_onParameter, shiftIdParameter);
        }
    
        public virtual ObjectResult<SP_Select_Shift_Days_Result> SP_Select_Shift_Days(Nullable<int> shiftId)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("shiftId", shiftId) :
                new ObjectParameter("shiftId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Shift_Days_Result>("SP_Select_Shift_Days", shiftIdParameter);
        }
    
        public virtual int SP_Update_Shift_Days(Nullable<int> shiftId, string chk_ids, string ids)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("shiftId", shiftId) :
                new ObjectParameter("shiftId", typeof(int));
    
            var chk_idsParameter = chk_ids != null ?
                new ObjectParameter("chk_ids", chk_ids) :
                new ObjectParameter("chk_ids", typeof(string));
    
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Shift_Days", shiftIdParameter, chk_idsParameter, idsParameter);
        }
    
        public virtual int SP_Close_Month(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Close_Month", idParameter);
        }
    
        public virtual ObjectResult<SP_Select_Opened_Month_Result> SP_Select_Opened_Month()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Opened_Month_Result>("SP_Select_Opened_Month");
        }
    
        public virtual int SP_Open_Month(string code, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string created_by)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Open_Month", codeParameter, fromParameter, toParameter, created_byParameter);
        }
    
        public virtual ObjectResult<Log_Proceed_ByEmpID_And_RangeDate_Result> Log_Proceed_ByEmpID_And_RangeDate(Nullable<int> empId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Log_Proceed_ByEmpID_And_RangeDate_Result>("Log_Proceed_ByEmpID_And_RangeDate", empIdParameter, fromParameter, toParameter);
        }
    
        public virtual int SP_Terminate_And_End_Contract(Nullable<int> id, Nullable<System.DateTime> endAt, Nullable<bool> isTerminate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var endAtParameter = endAt.HasValue ?
                new ObjectParameter("endAt", endAt) :
                new ObjectParameter("endAt", typeof(System.DateTime));
    
            var isTerminateParameter = isTerminate.HasValue ?
                new ObjectParameter("isTerminate", isTerminate) :
                new ObjectParameter("isTerminate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Terminate_And_End_Contract", idParameter, endAtParameter, isTerminateParameter);
        }
    
        public virtual ObjectResult<SP_Pending_Requests_Result> SP_Pending_Requests(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Pending_Requests_Result>("SP_Pending_Requests", userIDParameter);
        }
    
        public virtual ObjectResult<SP_select_Coach_Result> SP_select_Coach(Nullable<int> department_id, Nullable<int> employee_id)
        {
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_select_Coach_Result>("SP_select_Coach", department_idParameter, employee_idParameter);
        }
    
        public virtual int SP_Employee_Department_Transfer(Nullable<int> employee_Id, Nullable<int> department_job_Id_ref, Nullable<System.DateTime> joined_at, string notes, Nullable<int> employee_coach_Id)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("employee_Id", employee_Id) :
                new ObjectParameter("employee_Id", typeof(int));
    
            var department_job_Id_refParameter = department_job_Id_ref.HasValue ?
                new ObjectParameter("department_job_Id_ref", department_job_Id_ref) :
                new ObjectParameter("department_job_Id_ref", typeof(int));
    
            var joined_atParameter = joined_at.HasValue ?
                new ObjectParameter("joined_at", joined_at) :
                new ObjectParameter("joined_at", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var employee_coach_IdParameter = employee_coach_Id.HasValue ?
                new ObjectParameter("employee_coach_Id", employee_coach_Id) :
                new ObjectParameter("employee_coach_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Department_Transfer", employee_IdParameter, department_job_Id_refParameter, joined_atParameter, notesParameter, employee_coach_IdParameter);
        }
    
        public virtual ObjectResult<SP_Select_Employee_Transfered_Result> SP_Select_Employee_Transfered(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Employee_Transfered_Result>("SP_Select_Employee_Transfered", employee_idParameter);
        }
    }
}
